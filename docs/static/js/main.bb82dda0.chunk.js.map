{"version":3,"sources":["features/authorization/Auth.module.css","features/authorization/authSlice.js","features/authorization/authThunks.js","features/favorites/favoritesThunks.js","features/history/historyThunks.js","features/header/IsLoggedHead.js","features/header/NotLoggedHead.js","auxiliary/customHooks/useFormInput.js","features/authorization/Signin.js","features/authorization/Signup.js","features/catalog/catalogStrings.js","features/catalog/catalogSelectors.js","auxiliary/API/apiConfig.js","auxiliary/API/apiHelpers.js","features/catalog/catalogFetchThunks.js","features/catalog/messages/LoadingMessage.js","features/catalog/messages/ErrorMessage.js","features/catalog/category/CategoryListItem.js","features/catalog/category/CategoryList.js","features/catalog/category/Category.js","features/catalog/item/Description.js","auxiliary/utilities/normalCase.js","features/catalog/item/SpecificationsList.js","auxiliary/API/getImages.js","features/catalog/item/SingleItemCard.js","features/catalog/item/SingleItem.js","features/search/searchConfig.js","features/search/searchFetchThunk.js","features/search/searchSelectors.js","features/search/messages/LoadingMessage.js","features/search/messages/ErrorMessage.js","features/catalog/helpers/status.js","features/search/searchSlice.js","features/search/SearchForm.js","auxiliary/customHooks/useDebounce.js","features/search/SearchResultsColumn.js","features/search/SearchResults.js","features/search/Search.js","auxiliary/customHooks/useSearchParams.js","features/mainPage/MainPage.js","features/favorites/FavoritesColumn.js","features/favorites/Favorites.js","features/history/HistoryColumn.js","features/history/History.js","features/notFound/NotFound.js","auxiliary/routeWrappers/ProtectedRoute.js","auxiliary/routeWrappers/AuthRoute.js","features/footer/Footer.js","App.js","features/catalog/catalogSlice.js","features/catalog/helpers/cache.js","app/store.js","index.js","app/config.js"],"names":["module","exports","initialState","login","localStorage","getItem","userObj","JSON","parse","user","userIsLogged","userName","progress","status","message","code","favorites","history","films","people","planets","isCurrUserLoged","authSlice","createSlice","name","reducers","loading","state","idle","validationProgress","action","payload","logInUser","logOutUser","addToFavorites","type","push","itemObj","addToHistory","queryObj","removeFromFavorites","splice","index","removeFromHistory","clearFavoritesState","clearHistoryState","actions","authReducer","reducer","validateSignInThunk","pass","setAuthLog","dispatch","trim","storageData","setItem","setFavoritesStateThunk","setHistoryStateThunk","IsLoggedHead","useDispatch","className","to","style","padding","color","border","onClick","removeItem","NotLoggedHead","useFormInput","initialValue","useState","value","setValue","event","target","Signin","onLoginChange","loginReset","onPassChange","passReset","authLog","isPending","setIsPending","auth","form","onSubmit","preventDefault","control","htmlFor","required","onChange","id","disabled","textAlign","fontWeight","Signup","confirmPass","onConfirmPassChange","confirmPassReset","stringify","validateSignUpThunk","CATALOG_STRINGS","categoryListItemLink","categoryHeader","selectCatalogItem","url","catalog","cache","items","find","item","Number","selectCatalogStatus","error","API_URLS","base","species","starships","vehicles","IMAGE_ROOT","URL_IMAGE_PERSON","URL_IMAGE_PLANET","URL_IMAGE_FILM","IMAGE_EXTENSION","VIEW_METHODS","method","fields","default","transformResult","result","transformedResult","Object","entries","entry","camelcase","urlParts","split","title","view","doFetchForJson","a","fetch","response","ok","Error","statusText","json","jsonData","doFetchSingleItem","doFetchFullResults","data","results","next","nextResults","map","fetchCatalogCategory","createAsyncThunk","rejectWithValue","fullUrl","fetchCatalogItem","LoadingMessage","ErrorMessage","CategoryListItem","props","CategoryList","listData","useSelector","listItems","selectCatalogListItems","itemData","Category","useParams","fetchStatus","fetchError","useEffect","Description","episodeId","openingCrawl","normalCase","str","words","kebabCase","capitalize","join","SpecificationsList","specifications","specification","getPlanetImage","getFilmImage","SingleItemCard","itemId","findIndex","el","isInFavorite","addToFavoritesHandler","addToFavoritesThunk","src","alt","removeFromFavoritesThunk","SingleItem","getState","getCatalogItemThunk","TYPES_FOR_SEARCH","payloadCreator","searchStr","rejectedWithValue","searchResults","length","fetchSearchResults","selectSearchResults","search","selectSearchQuery","query","selectSearchStatus","setPending","setError","resetStatus","searchSlice","setSearchQuery","extraReducers","builder","addCase","pending","fulfilled","rejected","searchReducer","SearchForm","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","evt","submitHandler","changeHandler","SearchResultsColumn","resultsEntry","resultLinkClickHandler","SearchResults","searchResultsEntry","Search","keys","searchParams","URLSearchParams","useLocation","key","get","useSearchParams","initialQuery","searchQuery","isRedirect","redirectQuery","setRedirect","submitFormHandler","useCallback","obj","addToHistoryThunk","useMemo","pathname","MainPage","FavoritesColumn","favoritesList","list","Favorites","HistoryColumn","historyList","historyItem","History","NotFound","ProtectedRoute","Component","component","rest","render","from","location","AuthRoute","Footer","href","rel","margin","App","routeMatch","useRouteMatch","console","log","exact","path","catalogReducer","tightList","addListItemsToCache","addItemToCache","store","configureStore","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.bb82dda0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__1q5C8\",\"form\":\"Auth_form__DbT-V\",\"control\":\"Auth_control__3-sPB\",\"actions\":\"Auth_actions__1R_02\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { isCurrUserLoged } from './authThunks';\r\n\r\nconst initialState = isCurrUserLoged();\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        loading(state) {\r\n            state.progress.status = 'loading';\r\n        },\r\n        idle(state) {\r\n            state.progress.status = 'idle';\r\n        },\r\n        validationProgress(state, action) {\r\n            state.progress.message = action.payload.message;\r\n            state.progress.code = action.payload.code;\r\n            state.progress.status = action.payload.status;\r\n        },\r\n        logInUser(state, action) {\r\n            state.user.userName = action.payload.login;\r\n            state.user.userIsLogged = true;\r\n        },\r\n        logOutUser(state) {\r\n            state.user.userName = '';\r\n            state.user.userIsLogged = false;\r\n        },\r\n        addToFavorites(state, action) {\r\n            state.favorites[action.payload.type].push(\r\n                ...action.payload.itemObj\r\n            );\r\n        },\r\n        addToHistory(state, action) {\r\n            state.history[action.payload.type].push(...action.payload.queryObj);\r\n        },\r\n        removeFromFavorites(state, action) {\r\n            state.favorites[action.payload.type].splice(\r\n                action.payload.index,\r\n                1\r\n            );\r\n        },\r\n        removeFromHistory(state, action) {\r\n            state.history[action.payload.type].splice(action.payload.index, 1);\r\n        },\r\n        clearFavoritesState(state) {\r\n            state.favorites.films = [];\r\n            state.favorites.people = [];\r\n            state.favorites.planets = [];\r\n        },\r\n        clearHistoryState(state) {\r\n            state.history.films = [];\r\n            state.history.people = [];\r\n            state.history.planets = [];\r\n        },\r\n    },\r\n});\r\n\r\nexport function selectAuth(state) {\r\n    return state.auth;\r\n}\r\n\r\nexport const {\r\n    loading,\r\n    idle,\r\n    validationProgress,\r\n    logInUser,\r\n    logOutUser,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    clearFavoritesState,\r\n    addToHistory,\r\n    removeFromHistory,\r\n    clearHistoryState,\r\n} = authSlice.actions;\r\nexport const authReducer = authSlice.reducer;\r\n","import {\r\n    loading,\r\n    validationProgress,\r\n    logInUser,\r\n    logOutUser,\r\n    clearFavoritesState,\r\n    clearHistoryState,\r\n} from './authSlice';\r\nimport { setFavoritesStateThunk } from '../favorites/favoritesThunks';\r\nimport { setHistoryStateThunk } from '../history/historyThunks';\r\n\r\n/**\r\n * Валидация Регистрации пользователя:\r\n * @param {String} login Введённый пользователем логин.\r\n * @param {String} pass  Введённый пользователем пароль.\r\n * @param {String} confirmPass Подтверждение пароля.\r\n * @param {Function} setAuthLog Функция Callback (Сеттер) для сообщения компоненте статуса регистрации.\r\n */\r\nexport function validateSignUpThunk(login, pass, confirmPass, setAuthLog) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        if (!login.trim() || !pass || !confirmPass) {\r\n            const message = 'Данные не заполнены';\r\n            const code = 400;\r\n            const status = 'idle';\r\n            setAuthLog(message);\r\n            return dispatch(validationProgress({ message, code, status }));\r\n        }\r\n\r\n        if (localStorage.getItem(login)) {\r\n            const message = 'Логин занят';\r\n            const code = 400;\r\n            const status = 'idle';\r\n            dispatch(validationProgress({ message, code, status }));\r\n            return setAuthLog(message);\r\n        }\r\n\r\n        if (pass !== confirmPass) {\r\n            const message = 'Пароли не совпадают';\r\n            const code = 400;\r\n            const status = 'idle';\r\n            dispatch(validationProgress({ message, code, status }));\r\n            return setAuthLog(message);\r\n        }\r\n\r\n        const user = {\r\n            pass,\r\n            favorites: {\r\n                films: [],\r\n                people: [],\r\n                planets: [],\r\n            },\r\n            history: {\r\n                films: [],\r\n                people: [],\r\n                planets: [],\r\n            },\r\n        };\r\n\r\n        localStorage.setItem(login, JSON.stringify(user));\r\n        localStorage.setItem('currentUser', login);\r\n\r\n        const message = 'Пользователь создан';\r\n        const code = 201;\r\n        const status = 'idle';\r\n        dispatch(logInUser({ login }));\r\n        dispatch(validationProgress({ message, code, status }));\r\n        setAuthLog(message);\r\n    };\r\n}\r\n\r\n/**\r\n * Валидация Авторизации пользователя:\r\n * @param {String} login Введённый пользователем логин.\r\n * @param {String} pass  Введённый пользователем пароль.\r\n * @param {Function} setAuthLog Функция Callback (Сеттер) для сообщения компоненте статуса регистрации.\r\n */\r\nexport function validateSignInThunk(login, pass, setAuthLog) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        if (!login.trim() || !pass) {\r\n            const message = 'Данные не заполнены';\r\n            const code = 400;\r\n            const status = 'idle';\r\n            dispatch(validationProgress({ message, code, status }));\r\n            return setAuthLog(message);\r\n        }\r\n\r\n        let storageData = localStorage.getItem(login);\r\n        if (storageData) {\r\n            storageData = JSON.parse(storageData);\r\n        }\r\n\r\n        if (!storageData || storageData.pass !== pass) {\r\n            const message = 'Некорректные данные';\r\n            const code = 400;\r\n            const status = 'idle';\r\n            dispatch(validationProgress({ message, code, status }));\r\n            return setAuthLog(message);\r\n        }\r\n\r\n        localStorage.setItem('currentUser', login);\r\n\r\n        dispatch(setFavoritesStateThunk(storageData.favorites));\r\n\r\n        dispatch(setHistoryStateThunk(storageData.history));\r\n\r\n        const message = 'Пользователь авторизован';\r\n        const code = 200;\r\n        const status = 'idle';\r\n        dispatch(logInUser({ login }));\r\n        dispatch(validationProgress({ message, code, status }));\r\n        setAuthLog(message);\r\n    };\r\n}\r\n\r\n/**\r\n * Функция (thunk) удаляет из localstorage пару 'currUser' - 'login'.\r\n *\r\n * Очищает Добавленные пользователем в Избранное элементы из State.\r\n *\r\n * Затем удаляет данные о пользователе из 'Store'.\r\n */\r\nexport function logOutUserThunk() {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n        localStorage.removeItem('currentUser');\r\n\r\n        const message = 'Пользователь не авторизован';\r\n        const code = 204;\r\n        const status = 'idle';\r\n        dispatch(logOutUser());\r\n\r\n        dispatch(clearFavoritesState());\r\n\r\n        dispatch(clearHistoryState());\r\n\r\n        dispatch(validationProgress({ message, code, status }));\r\n    };\r\n}\r\n\r\n/**\r\n * Функция проверяет localstorage на наличие ключа: 'currUser'.\r\n *\r\n * @return {Object} Если ключ currUser есть в localstorage,\r\n * возвращает состояние по умолчанию с Авторизованным пользователем в reducer Аутентификации.\r\n *\r\n * Также подтягивает из Local Storage все добавленные пользователем в Избранное карточки,\r\n * и Историю поиска.\r\n * @return {Object} Если ключа currUser нет в localstorage,\r\n * возвращает состояние по умолчанию без пользователя в reducer Аутентификации.\r\n */\r\nexport function isCurrUserLoged() {\r\n    const login = localStorage.getItem('currentUser');\r\n\r\n    if (login) {\r\n        let userObj = localStorage.getItem(login);\r\n        userObj = JSON.parse(userObj);\r\n        return {\r\n            user: {\r\n                userIsLogged: true,\r\n                userName: login,\r\n            },\r\n            progress: {\r\n                status: 'idle',\r\n                message: 'Пользователь авторизован',\r\n                code: 200,\r\n            },\r\n            favorites: userObj.favorites,\r\n            history: userObj.history,\r\n        };\r\n    } else {\r\n        return {\r\n            user: {\r\n                userIsLogged: false,\r\n                userName: '',\r\n            },\r\n            progress: {\r\n                status: 'idle',\r\n                message: 'Пользователь не авторизован',\r\n                code: 204,\r\n            },\r\n            favorites: {\r\n                films: [],\r\n                people: [],\r\n                planets: [],\r\n            },\r\n            history: {\r\n                films: [],\r\n                people: [],\r\n                planets: [],\r\n            },\r\n        };\r\n    }\r\n}\r\n","import {\r\n    loading,\r\n    idle,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n} from '../authorization/authSlice';\r\n\r\nexport function setFavoritesStateThunk({ films, people, planets }) {\r\n    return function (dispatch) {\r\n        dispatch(addToFavorites({ type: 'films', itemObj: films }));\r\n        dispatch(addToFavorites({ type: 'people', itemObj: people }));\r\n        dispatch(addToFavorites({ type: 'planets', itemObj: planets }));\r\n    };\r\n}\r\n\r\nexport function addToFavoritesThunk(login, type, itemId, title) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        let data = localStorage.getItem(login);\r\n        data = JSON.parse(data);\r\n\r\n        let item = {\r\n            itemId,\r\n            title,\r\n        };\r\n\r\n        data.favorites[type].push(item);\r\n        localStorage.setItem(login, JSON.stringify(data));\r\n\r\n        item = [item];\r\n\r\n        dispatch(addToFavorites({ type, itemObj: item }));\r\n        dispatch(idle());\r\n    };\r\n}\r\n\r\nexport function removeFromFavoritesThunk(login, type, index) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        let data = localStorage.getItem(login);\r\n        data = JSON.parse(data);\r\n\r\n        data.favorites[type].splice(index, 1);\r\n        localStorage.setItem(login, JSON.stringify(data));\r\n\r\n        dispatch(removeFromFavorites({ type, index }));\r\n        dispatch(idle());\r\n    };\r\n}\r\n","import {\r\n    loading,\r\n    idle,\r\n    addToHistory,\r\n    removeFromHistory,\r\n} from '../authorization/authSlice';\r\n\r\nexport function setHistoryStateThunk({ films, people, planets }) {\r\n    return function (dispatch) {\r\n        dispatch(addToHistory({ type: 'films', queryObj: films }));\r\n        dispatch(addToHistory({ type: 'people', queryObj: people }));\r\n        dispatch(addToHistory({ type: 'planets', queryObj: planets }));\r\n    };\r\n}\r\n\r\nexport function addToHistoryThunk(login, type, obj) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        let data = localStorage.getItem(login);\r\n        data = JSON.parse(data);\r\n\r\n        data.history[type].push(obj);\r\n        localStorage.setItem(login, JSON.stringify(data));\r\n\r\n        obj = [obj];\r\n\r\n        dispatch(addToHistory({ type, queryObj: obj }));\r\n        dispatch(idle());\r\n    };\r\n}\r\n\r\nexport function removeFromHistoryThunk(login, type, index) {\r\n    return function (dispatch) {\r\n        dispatch(loading());\r\n\r\n        let data = localStorage.getItem(login);\r\n        data = JSON.parse(data);\r\n\r\n        data.history[type].splice(index, 1);\r\n        localStorage.setItem(login, JSON.stringify(data));\r\n\r\n        dispatch(removeFromHistory({ type, index }));\r\n        dispatch(idle());\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logOutUserThunk } from '../authorization/authThunks';\r\n\r\nexport function IsLoggedHead({ userName }) {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <nav className=\"header\">\r\n            <ul>\r\n                <li>\r\n                    <Link\r\n                        to=\"/\"\r\n                        style={{\r\n                            padding: '0.1rem 0.1rem',\r\n                            color: 'black',\r\n                            border: 'solid',\r\n                        }}\r\n                    >\r\n                        {userName}\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/catalog/films\">Фильмы</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/catalog/people\">Персонажи</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/catalog/planets\">Планеты</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/favorites\">Избранное</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/history\">История</Link>\r\n                </li>\r\n                <li onClick={() => dispatch(logOutUserThunk())}>\r\n                    <Link to=\"/signin\" style={{ color: 'darkbrown' }}>\r\n                        Выход\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function NotLoggedHead() {\r\n    return (\r\n        <nav className=\"header\">\r\n            <ul>\r\n                <li>\r\n                    <Link\r\n                        to=\"/\"\r\n                        style={{\r\n                            padding: '0.1rem 0.1rem',\r\n                            color: 'black',\r\n                            border: 'solid',\r\n                        }}\r\n                    >\r\n                        Star Wars Fans\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/signin\">Вход</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/signup\">Регистрация</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n/**\r\n *\r\n * @param {String} initialValue\r\n *\r\n * Возвращает три значения:\r\n * @return {String} Значение.\r\n * @return {Function} Функцию меняющую значение.\r\n * @return {Function} Функцию сбрасывающую значение на пустую строку.\r\n */\r\nexport function useFormInput(initialValue) {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const resetValue = () => {\r\n        setValue('');\r\n    };\r\n\r\n    return [value, handleChange, resetValue];\r\n}\r\n","import { useState } from 'react';\r\nimport { useFormInput } from '../../auxiliary/customHooks/useFormInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { validateSignInThunk } from './authThunks';\r\nimport { auth, form, control, actions } from './Auth.module.css';\r\n\r\nexport function Signin() {\r\n    const [login, onLoginChange, loginReset] = useFormInput('');\r\n    const [pass, onPassChange, passReset] = useFormInput('');\r\n    const [authLog, setAuthLog] = useState('');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setIsPending(true);\r\n\r\n        dispatch(validateSignInThunk(login, pass, setAuthLog));\r\n\r\n        loginReset();\r\n        passReset();\r\n\r\n        setIsPending(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"auth-card\">\r\n                <div className={auth}>\r\n                    {authLog && <p>{authLog}</p>}\r\n                    <h2>Вход</h2>\r\n                    <form className={form} onSubmit={submitHandler}>\r\n                        <div className={control}>\r\n                            <label htmlFor=\"login\">Логин</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                value={login}\r\n                                onChange={onLoginChange}\r\n                                id=\"login\"\r\n                            />\r\n                        </div>\r\n                        <div className={control}>\r\n                            <label htmlFor=\"password\">Пароль</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                required\r\n                                value={pass}\r\n                                onChange={onPassChange}\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n                        <div className={actions}>\r\n                            <button disabled={isPending}>Войти</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <p\r\n                style={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                }}\r\n            >\r\n                Нужен аккаунт?\r\n                <Link\r\n                    to=\"signup\"\r\n                    style={{ color: 'darkblue', fontWeight: 'bold' }}\r\n                >\r\n                    &nbsp;&nbsp;Создать\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport { useFormInput } from '../../auxiliary/customHooks/useFormInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { validateSignUpThunk } from './authThunks';\r\nimport { auth, form, control, actions } from './Auth.module.css';\r\n\r\nexport function Signup() {\r\n    const [login, onLoginChange, loginReset] = useFormInput('');\r\n    const [pass, onPassChange, passReset] = useFormInput('');\r\n    const [confirmPass, onConfirmPassChange, confirmPassReset] =\r\n        useFormInput('');\r\n    const [authLog, setAuthLog] = useState('');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setIsPending(true);\r\n\r\n        dispatch(validateSignUpThunk(login, pass, confirmPass, setAuthLog));\r\n\r\n        loginReset();\r\n        passReset();\r\n        confirmPassReset();\r\n\r\n        setIsPending(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"auth-card\">\r\n                <div className={auth}>\r\n                    {authLog && <p>{authLog}</p>}\r\n                    <h2>Регистрация</h2>\r\n                    <form className={form} onSubmit={submitHandler}>\r\n                        <div className={control}>\r\n                            <label htmlFor=\"login\">Логин</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                value={login}\r\n                                onChange={onLoginChange}\r\n                                id=\"login\"\r\n                            />\r\n                        </div>\r\n                        <div className={control}>\r\n                            <label htmlFor=\"password\">Пароль</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                required\r\n                                value={pass}\r\n                                onChange={onPassChange}\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n                        <div className={control}>\r\n                            <label htmlFor=\"confirmPassword\">\r\n                                Подтвердите пароль\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                required\r\n                                value={confirmPass}\r\n                                onChange={onConfirmPassChange}\r\n                                id=\"confirmPassword\"\r\n                            />\r\n                        </div>\r\n                        <div className={actions}>\r\n                            <button disabled={isPending}>Готово</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <p\r\n                style={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                }}\r\n            >\r\n                Уже есть аккаунт?\r\n                <Link\r\n                    to=\"signin\"\r\n                    style={{ color: 'darkblue', fontWeight: 'bold' }}\r\n                >\r\n                    &nbsp;&nbsp;Войти\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n","const CATALOG_STRINGS = {\r\n    categoryListItemLink: 'Подробнее',\r\n    films: {\r\n        categoryHeader: 'Список фильмов',\r\n    },\r\n    people: {\r\n        categoryHeader: 'Список персонажей',\r\n    },\r\n    planets: {\r\n        categoryHeader: 'Список планет',\r\n    },\r\n};\r\n\r\nexport { CATALOG_STRINGS };\r\n","// Получает списочные элементы каталога определённой категории\r\nconst selectCatalogListItems = (state, type) =>\r\n    state.catalog.cache.listItems[type];\r\n\r\n// Получает элемент каталога\r\nconst selectCatalogItem = (state, type, { id, url }) => {\r\n    return state.catalog.cache.items[type]?.find((item) => {\r\n        const res = id ? Number(item.id) === Number(id) : item.url === url;\r\n        return res;\r\n    });\r\n};\r\n\r\n// Получает статус запроса\r\nconst selectCatalogStatus = (state) => {\r\n    return [state.catalog.status, state.catalog.error];\r\n};\r\n\r\nexport { selectCatalogListItems, selectCatalogItem, selectCatalogStatus };\r\n","// Новая структура хранения API данных\r\nconst API_URLS = {\r\n    base: 'https://swapi.dev/api/',\r\n    films: 'films/',\r\n    people: 'people/',\r\n    planets: 'planets/',\r\n    species: 'species/',\r\n    starships: 'starships/',\r\n    vehicles: 'vehicles/',\r\n};\r\n\r\n// images:\r\nconst IMAGE_ROOT = 'https://starwars-visualguide.com/assets/img/';\r\nconst IMAGE_PEOPLE = 'characters';\r\nconst IMAGE_PLANETS = 'planets';\r\nconst IMAGE_FILMS = 'films';\r\n\r\nconst URL_IMAGE_PERSON = `${IMAGE_ROOT}${IMAGE_PEOPLE}`;\r\nconst URL_IMAGE_PLANET = `${IMAGE_ROOT}${IMAGE_PLANETS}`;\r\nconst URL_IMAGE_FILM = `${IMAGE_ROOT}${IMAGE_FILMS}`;\r\n\r\nconst IMAGE_EXTENSION = '.jpg';\r\n\r\nexport {\r\n    API_URLS,\r\n    URL_IMAGE_PERSON,\r\n    URL_IMAGE_PLANET,\r\n    URL_IMAGE_FILM,\r\n    IMAGE_EXTENSION,\r\n};\r\n","import camelcase from 'lodash.camelcase';\r\n\r\n// Способы вывода описаний для разных типов элементов\r\nconst VIEW_METHODS = {\r\n    films: {\r\n        method: 'description',\r\n    },\r\n    people: {\r\n        method: 'specificationsList',\r\n        fields: ['birthYear', 'height', 'eyeColor'],\r\n    },\r\n    planets: {\r\n        method: 'specificationsList',\r\n        fields: ['climate', 'diameter', 'terrain'],\r\n    },\r\n    default: {\r\n        method: 'specificationsList',\r\n        fields: [],\r\n    },\r\n};\r\n\r\n// Преобразует пришедшие данные для работы на фронтенде\r\nconst transformResult = (result) => {\r\n    const transformedResult = {};\r\n    for (const entry of Object.entries(result)) {\r\n        // Переводим ключи в camelCase\r\n        const key = camelcase(entry[0]);\r\n        transformedResult[key] = entry[1];\r\n    }\r\n\r\n    // Добавляем поля type и id из url\r\n    const urlParts = result.url.split('/');\r\n    transformedResult.id = urlParts[5];\r\n    transformedResult.type = urlParts[4];\r\n\r\n    // Добавляем поле title из name или title записи\r\n    transformedResult.title = transformedResult.title || transformedResult.name;\r\n\r\n    // Добавляем метод вывода описания элемента\r\n    transformedResult.view =\r\n        VIEW_METHODS[transformedResult.type] || VIEW_METHODS.default;\r\n\r\n    return transformedResult;\r\n};\r\n\r\n// Делает запрос JSON данных\r\nconst doFetchForJson = async (url) => {\r\n    const response = await fetch(url);\r\n    // TODO Решить как обрабатывать ошибки\r\n    if (!response.ok) {\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n    }\r\n    const jsonData = await response.json();\r\n    return jsonData;\r\n};\r\n\r\n// Делает запрос одной записи из API\r\nconst doFetchSingleItem = async (url) => {\r\n    const item = await doFetchForJson(url);\r\n    return transformResult(item);\r\n};\r\n\r\n// Делает полный запрос списка записей из API\r\nconst doFetchFullResults = async (url) => {\r\n    const data = await doFetchForJson(url);\r\n    let results = data.results;\r\n    if (data.next !== null) {\r\n        const nextResults = await doFetchFullResults(data.next);\r\n        results = [...results, ...nextResults];\r\n    }\r\n    return results.map((result) => transformResult(result));\r\n};\r\n\r\nexport {\r\n    transformResult,\r\n    doFetchForJson,\r\n    doFetchSingleItem,\r\n    doFetchFullResults,\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { API_URLS } from '../../auxiliary/API/apiConfig';\r\nimport {\r\n    doFetchSingleItem,\r\n    doFetchFullResults,\r\n} from '../../auxiliary/API/apiHelpers';\r\nimport { selectCatalogItem } from './catalogSelectors';\r\n\r\n// Запускает запрос элемента, если его нет в кеше\r\nconst getCatalogItemThunk = ({ type, id, url }) => {\r\n    return (dispatch, getState) => {\r\n        const item = selectCatalogItem(getState(), type, { id, url });\r\n        if (!item) {\r\n            dispatch(fetchCatalogItem({ type, id, url }));\r\n        }\r\n    };\r\n};\r\n\r\n// Thunk для запроса каталога по категории\r\nconst fetchCatalogCategory = createAsyncThunk(\r\n    'catalog/fetchCatalogCategory',\r\n    async (type, { rejectWithValue }) => {\r\n        const fullUrl = `${API_URLS.base}${API_URLS[type]}`;\r\n        try {\r\n            const results = await doFetchFullResults(fullUrl);\r\n            return { type, result: results };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\n// Thunk для запроса одного элемента каталога\r\nconst fetchCatalogItem = createAsyncThunk(\r\n    'catalog/fetchCatalogItem',\r\n    async ({ type, id, url }, { rejectWithValue }) => {\r\n        // TODO Добавить форматирование url\r\n        const fullUrl = url || `${API_URLS.base}/${type}/${id}`;\r\n        if (!fullUrl) {\r\n            rejectWithValue('Некорректные входные данные');\r\n        }\r\n        try {\r\n            const result = await doFetchSingleItem(fullUrl);\r\n            type = type || result.type;\r\n            return { type, result };\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport { getCatalogItemThunk, fetchCatalogCategory, fetchCatalogItem };\r\n","import React from 'react';\r\n\r\n// Список фильмов\r\nexport function LoadingMessage() {\r\n    return <div className=\"loading-message\">Данные загружаются...</div>;\r\n}\r\n","import React from 'react';\r\n\r\n// Список фильмов\r\nexport function ErrorMessage({ error }) {\r\n    return (\r\n        <div className=\"error-message\">\r\n            Ошибка: {error || 'Произошла ошибка'}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CATALOG_STRINGS } from '../catalogStrings';\r\n\r\n// Единица списка элементов\r\nconst CategoryListItem = (props) => {\r\n    const { id, type, title } = props;\r\n    return (\r\n        <div className=\"category-item\">\r\n            <h3>{title}</h3>\r\n            <Link to={`/catalog/${type}/${id}`}>\r\n                {CATALOG_STRINGS.categoryListItemLink}\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CategoryListItem };\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CategoryListItem } from './CategoryListItem';\r\nimport { selectCatalogListItems } from '../catalogSelectors';\r\n\r\n// Список элементов категории\r\nconst CategoryList = (props) => {\r\n    const { type } = props;\r\n    // Забираем данные о элементе из кеша\r\n    const listData =\r\n        useSelector((state) => selectCatalogListItems(state, type)) || [];\r\n\r\n    return (\r\n        <div className=\"catalog-grid\">\r\n            {listData.map((itemData) => {\r\n                return (\r\n                    <CategoryListItem\r\n                        key={itemData.id}\r\n                        id={itemData.id}\r\n                        type={itemData.type}\r\n                        title={itemData.title}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { CategoryList };\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { CATALOG_STRINGS } from '../catalogStrings';\r\nimport { selectCatalogStatus } from '../catalogSelectors';\r\nimport { fetchCatalogCategory } from '../catalogFetchThunks';\r\nimport { LoadingMessage } from '../messages/LoadingMessage';\r\nimport { ErrorMessage } from '../messages/ErrorMessage';\r\nimport { CategoryList } from './CategoryList';\r\n\r\nconst Category = () => {\r\n    // Получаем тип элемента из адресной строки\r\n    const { type } = useParams();\r\n\r\n    // Данные о статусе запроса\r\n    const [fetchStatus, fetchError] = useSelector(selectCatalogStatus);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCatalogCategory(type));\r\n    }, [type, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body\">\r\n                <h1>{CATALOG_STRINGS[type]?.categoryHeader}</h1>\r\n                {fetchStatus === 'loading' && <LoadingMessage />}\r\n                {fetchError && <ErrorMessage error={fetchError} />}\r\n                <CategoryList type={type} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { Category };\r\n","import React from 'react';\r\n\r\nconst Description = (props) => {\r\n    return (\r\n        <>\r\n            <p className=\"episode-num\">Episode {props.episodeId}</p>\r\n            <div className=\"opening\">{props.openingCrawl}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { Description };\r\n","import kebabCase from 'lodash.kebabcase';\r\nimport capitalize from 'lodash.capitalize';\r\n\r\n// Переводит строку в обычный регистр\r\nconst normalCase = (str) => {\r\n    const words = kebabCase(str).split('-');\r\n    words[0] = capitalize(words[0]);\r\n    return words.join(' ');\r\n};\r\n\r\nexport { normalCase };\r\n","import React from 'react';\r\nimport { normalCase } from '../../../auxiliary/utilities/normalCase';\r\n\r\nconst SpecificationsList = (props) => {\r\n    const specifications = props.specifications.map((specification) => {\r\n        return (\r\n            <div key={specification.name}>\r\n                <dt className=\"specification-name\">\r\n                    {`${normalCase(specification.name)}:`}\r\n                </dt>\r\n                <dd className=\"specification-value\">{specification.value}</dd>\r\n                <br />\r\n            </div>\r\n        );\r\n    });\r\n    return <dl className=\"person-specifications\">{specifications}</dl>;\r\n};\r\n\r\nexport { SpecificationsList };\r\n","import {\r\n    URL_IMAGE_PERSON,\r\n    URL_IMAGE_PLANET,\r\n    URL_IMAGE_FILM,\r\n    IMAGE_EXTENSION,\r\n} from './apiConfig';\r\n\r\nexport function getPersonImage(id) {\r\n    return `${URL_IMAGE_PERSON}/${id}${IMAGE_EXTENSION}`;\r\n}\r\n\r\nexport function getPlanetImage(id) {\r\n    return `${URL_IMAGE_PLANET}/${id}${IMAGE_EXTENSION}`;\r\n}\r\n\r\nexport function getFilmImage(id) {\r\n    return `${URL_IMAGE_FILM}/${id}${IMAGE_EXTENSION}`;\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Description } from './Description';\r\nimport { SpecificationsList } from './SpecificationsList';\r\nimport {\r\n    addToFavoritesThunk,\r\n    removeFromFavoritesThunk,\r\n} from '../../favorites/favoritesThunks';\r\nimport {\r\n    getPersonImage,\r\n    getPlanetImage,\r\n    getFilmImage,\r\n} from '../../../auxiliary/API/getImages';\r\nimport { selectCatalogItem } from '../catalogSelectors';\r\n\r\n// Карточка элемента каталога\r\nfunction SingleItemCard(props) {\r\n    const { type, id: itemId } = props;\r\n    // Забираем данные о элементе из кеша\r\n    const itemData = useSelector((state) =>\r\n        selectCatalogItem(state, type, {\r\n            id: itemId,\r\n        })\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    /*   Функционал для работы с добавлением и удалением из Избранного   */\r\n    ///////////////////////////////////////////////////////////////////////\r\n    const login = useSelector((state) => state.auth.user.userName);\r\n    const favorites = useSelector((state) => state.auth.favorites)[type];\r\n    const index = favorites.findIndex((el) => el.itemId === `${itemId}`);\r\n    const isInFavorite = index === -1 ? false : true;\r\n\r\n    /*                         Buttons On Click Handlers                 */\r\n    const addToFavoritesHandler = (title) => {\r\n        dispatch(addToFavoritesThunk(login, type, itemId, title));\r\n    };\r\n\r\n    const removeFromFavoritesHandler = () => {\r\n        dispatch(removeFromFavoritesThunk(login, type, index));\r\n    };\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n    // Рендерим содержимое, только если есть данные об элементе\r\n    if (!itemData) {\r\n        return <div className={`single-${type}`}>Ожидание</div>;\r\n    }\r\n    return (\r\n        <div className={`single-${type}`}>\r\n            <h1>{itemData.title}</h1>\r\n            {itemData.view.method === 'description' && (\r\n                <Description\r\n                    episodeId={itemData.episodeId}\r\n                    openingCrawl={itemData.openingCrawl}\r\n                />\r\n            )}\r\n            {itemData.view.method === 'specifications' && (\r\n                <SpecificationsList\r\n                    specifications={itemData.view.fields.map(\r\n                        (specification) => {\r\n                            return {\r\n                                name: specification,\r\n                                value: itemData[specification],\r\n                            };\r\n                        }\r\n                    )}\r\n                />\r\n            )}\r\n            <div className=\"catalog-image\">\r\n                <img\r\n                    src={\r\n                        type === 'people'\r\n                            ? getPersonImage(itemId)\r\n                            : type === 'films'\r\n                            ? getFilmImage(itemId)\r\n                            : getPlanetImage(itemId)\r\n                    }\r\n                    alt={itemData.title || itemData.name}\r\n                />\r\n            </div>\r\n            {!isInFavorite && (\r\n                <button\r\n                    className=\"favorite-button\"\r\n                    onClick={() =>\r\n                        addToFavoritesHandler(itemData.title || itemData.name)\r\n                    }\r\n                >\r\n                    Добавить в избранное\r\n                </button>\r\n            )}\r\n            {isInFavorite && (\r\n                <button\r\n                    className=\"favorite-button\"\r\n                    onClick={removeFromFavoritesHandler}\r\n                >\r\n                    Удалить из избранного\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { SingleItemCard };\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { LoadingMessage } from '../messages/LoadingMessage';\r\nimport { ErrorMessage } from '../messages/ErrorMessage';\r\nimport { selectCatalogStatus } from '../catalogSelectors';\r\nimport { getCatalogItemThunk } from '../catalogFetchThunks';\r\nimport { SingleItemCard } from './SingleItemCard';\r\n\r\n// Карточка элемента каталога\r\nfunction SingleItem() {\r\n    // Получаем id и тип элемента из адресной строки\r\n    const { type, id } = useParams();\r\n\r\n    // Данные о статусе запроса\r\n    const [fetchStatus, fetchError] = useSelector(selectCatalogStatus);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCatalogItemThunk({ id, type }));\r\n        // Посылаем запрос\r\n        // dispatch(fetchCatalogItem({ id, type }));\r\n    }, [id, type, dispatch]);\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            {fetchStatus === 'loading' && <LoadingMessage />}\r\n            {fetchError && <ErrorMessage error={fetchError} />}\r\n            <SingleItemCard id={id} type={type} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { SingleItem };\r\n","const DEBOUNCE_DELAY = 700;\r\nconst TYPES_FOR_SEARCH = ['films', 'people', 'planets'];\r\n\r\nexport { DEBOUNCE_DELAY, TYPES_FOR_SEARCH };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { API_URLS } from '../../auxiliary/API/apiConfig';\r\nimport { doFetchFullResults } from '../../auxiliary/API/apiHelpers';\r\nimport { TYPES_FOR_SEARCH } from './searchConfig';\r\n\r\nconst payloadCreator = async (searchStr, { rejectedWithValue }) => {\r\n    if (!searchStr) {\r\n        return null;\r\n    }\r\n    let searchResults = [];\r\n    for (const type of TYPES_FOR_SEARCH) {\r\n        let results;\r\n        try {\r\n            results = await doFetchFullResults(\r\n                `${API_URLS.base}${API_URLS[type]}?search=${searchStr}`\r\n            );\r\n        } catch (error) {\r\n            rejectedWithValue(error);\r\n        }\r\n        if (results.length > 0) {\r\n            searchResults = [...searchResults, { type, results }];\r\n        }\r\n    }\r\n    return searchResults;\r\n};\r\n\r\nconst fetchSearchResults = createAsyncThunk(\r\n    'search/fetchResults',\r\n    payloadCreator\r\n);\r\n\r\nexport { fetchSearchResults };\r\n","// Получает данные о результатах поиска\r\nconst selectSearchResults = (state) => state.search.results;\r\n\r\n// Получает строку поиска\r\nconst selectSearchQuery = (state) => state.search.query;\r\n\r\n// Получает статус запроса\r\nconst selectSearchStatus = (state) => {\r\n    return [state.search.status, state.search.error];\r\n};\r\n\r\nexport { selectSearchResults, selectSearchQuery, selectSearchStatus };\r\n","import React from 'react';\r\n\r\n// Список фильмов\r\nexport function LoadingMessage() {\r\n    return <div className=\"loading-message\">Данные загружаются...</div>;\r\n}\r\n","import React from 'react';\r\n\r\n// Список фильмов\r\nexport function ErrorMessage({ error }) {\r\n    return (\r\n        <div className=\"error-message\">\r\n            Ошибка: {error || 'Произошла ошибка'}\r\n        </div>\r\n    );\r\n}\r\n","// Устанавливает статус ожидания\r\nconst setPending = (state) => {\r\n    state.status = 'loading';\r\n    state.error = null;\r\n};\r\n\r\n// Устанавливает статус ошибки\r\nconst setError = (state, error) => {\r\n    state.status = 'idle';\r\n    state.error = error || 'Неизвестная ошибка';\r\n};\r\n\r\n// Сбрасывает статус\r\nconst resetStatus = (state) => {\r\n    state.status = 'idle';\r\n    state.error = null;\r\n};\r\n\r\nexport { setPending, setError, resetStatus };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchSearchResults } from './searchFetchThunk';\r\nimport { setPending, setError, resetStatus } from './helpers';\r\n\r\nconst initialState = {\r\n    query: '',\r\n    results: [],\r\n    status: 'idle',\r\n    error: null,\r\n};\r\n\r\nconst searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        setSearchQuery: (state, action) => {\r\n            state.query = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchSearchResults.pending, (state) => {\r\n                setPending(state);\r\n            })\r\n            .addCase(fetchSearchResults.fulfilled, (state, { payload }) => {\r\n                resetStatus(state);\r\n                state.results = payload || [];\r\n            })\r\n            .addCase(\r\n                fetchSearchResults.rejected,\r\n                (state, { payload: error }) => {\r\n                    setError(state, error);\r\n                }\r\n            );\r\n    },\r\n});\r\n\r\nexport const searchReducer = searchSlice.reducer;\r\nexport const { setSearchQuery } = searchSlice.actions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { DEBOUNCE_DELAY } from './searchConfig';\r\nimport { useDebounce } from '../../auxiliary/customHooks/useDebounce';\r\nimport { setSearchQuery } from './searchSlice';\r\n\r\nconst SearchForm = (props) => {\r\n    const [value, setValue] = useState(props.initialValue);\r\n    const debouncedValue = useDebounce(value, DEBOUNCE_DELAY);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeHandler = (evt) => {\r\n        setValue(evt.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setSearchQuery(debouncedValue));\r\n    }, [debouncedValue, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={(evt) => props.submitHandler(evt, value)}>\r\n                <input\r\n                    className=\"search-input\"\r\n                    onChange={(evt) => changeHandler(evt)}\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    value={value}\r\n                />\r\n                <button className=\"search-button\" type=\"submit\">\r\n                    Поиск\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { SearchForm };\r\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n *\r\n * @param {Any} value Значение, обновление которого требуется задержать\r\n * @param {Number} delay Время задержки\r\n *\r\n * @return {Any} Значение, которое будет обновляться с задержкой\r\n */\r\nexport function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n        () => {\r\n            // Update debounced value after delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n            // Cancel the timeout if value changes (also on delay change or unmount)\r\n            // This is how we prevent debounced value from updating if value is changed ...\r\n            // .. within the delay period. Timeout gets cleared and restarted.\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport capitalize from 'lodash.capitalize';\r\n\r\nconst SearchResultsColumn = (props) => {\r\n    const searchResults = props.resultsEntry.results.map((result) => {\r\n        const url = `/catalog/${result.type}/${result.id}`;\r\n        const id = result.id;\r\n        const title = result.title;\r\n        const type = result.type;\r\n        return (\r\n            <li key={url}>\r\n                <Link // При клике передаём данные для записи в историю поиска\r\n                    onClick={() =>\r\n                        props.resultLinkClickHandler(type, {\r\n                            id,\r\n                            title,\r\n                        })\r\n                    }\r\n                    to={url}\r\n                >\r\n                    {title}\r\n                </Link>\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"search-column\">\r\n            <h2>{capitalize(props.resultsEntry.type)}:</h2>\r\n            <ul>{searchResults}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { SearchResultsColumn };\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSearchResults } from './searchSelectors';\r\n\r\nimport { SearchResultsColumn } from './SearchResultsColumn';\r\n\r\nconst SearchResults = (props) => {\r\n    const results = useSelector(selectSearchResults);\r\n\r\n    const searchResults = results.map((searchResultsEntry) => {\r\n        return (\r\n            searchResultsEntry && (\r\n                <SearchResultsColumn\r\n                    key={searchResultsEntry.type}\r\n                    resultsEntry={searchResultsEntry}\r\n                    resultLinkClickHandler={props.resultLinkClickHandler}\r\n                />\r\n            )\r\n        );\r\n    });\r\n    return <>{searchResults}</>;\r\n};\r\n\r\nexport { SearchResults };\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { useSearchParams } from '../../auxiliary/customHooks/useSearchParams';\r\nimport { fetchSearchResults } from './searchFetchThunk';\r\nimport { selectSearchQuery, selectSearchStatus } from './searchSelectors';\r\nimport { LoadingMessage } from './messages/LoadingMessage';\r\nimport { ErrorMessage } from './messages/ErrorMessage';\r\nimport { SearchForm } from './SearchForm';\r\nimport { SearchResults } from './SearchResults';\r\nimport { addToHistoryThunk } from '../history/historyThunks';\r\n\r\nconst Search = () => {\r\n    const [initialQuery] = useSearchParams(['search']);\r\n    const [fetchStatus, fetchError] = useSelector(selectSearchStatus);\r\n    const searchQuery = useSelector(selectSearchQuery);\r\n    const redirectInitial = {\r\n        isRedirect: false,\r\n        query: '',\r\n    };\r\n    const [{ isRedirect, query: redirectQuery }, setRedirect] =\r\n        useState(redirectInitial);\r\n\r\n    const login = useSelector((state) => state.auth.user.userName);\r\n    const history = useSelector((state) => state.auth.history);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Запрашиваем новые результаты поиска\r\n    useEffect(() => {\r\n        dispatch(fetchSearchResults(searchQuery));\r\n    }, [initialQuery, searchQuery, dispatch]);\r\n\r\n    // При отправке формы активируем редирект на страницу поиска\r\n    const submitFormHandler = (evt, value) => {\r\n        evt.preventDefault();\r\n        setRedirect({ isRedirect: true, query: value });\r\n    };\r\n\r\n    /**\r\n     * При клике на ссылку результата добавляет запись в историю\r\n     * @param {String} type Тип записи (фильмы, персонажи или планеты)\r\n     * @param {Object} query Запись в формате {id: 1, title: 'Skywalker'}\r\n     */\r\n    const resultLinkClickHandler = useCallback(\r\n        (type, query) => {\r\n            if (login === '') {\r\n                return;\r\n            }\r\n            const isInHistory = history[type].find(\r\n                (el) => el.id === `${query.id}`\r\n            );\r\n\r\n            if (isInHistory) {\r\n                return;\r\n            }\r\n            dispatch(addToHistoryThunk(login, type, query));\r\n        },\r\n        [history, login, dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {useMemo(\r\n                () => (\r\n                    <>\r\n                        {isRedirect && (\r\n                            <>\r\n                                <Redirect\r\n                                    push\r\n                                    to={{\r\n                                        pathname: '/search',\r\n                                        search: `?search=${redirectQuery}`,\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </>\r\n                ),\r\n                [isRedirect, redirectQuery]\r\n            )}\r\n            <div className=\"search-container\">\r\n                {useMemo(\r\n                    () => (\r\n                        <>\r\n                            <div className=\"search-header\">\r\n                                <SearchForm\r\n                                    initialValue={initialQuery || ''}\r\n                                    submitHandler={submitFormHandler}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ),\r\n                    [initialQuery]\r\n                )}\r\n                {useMemo(\r\n                    () => (\r\n                        <div className=\"search-body\">\r\n                            {fetchStatus === 'loading' && <LoadingMessage />}\r\n                            {fetchError && <ErrorMessage error={fetchError} />}\r\n                            <SearchResults\r\n                                resultLinkClickHandler={resultLinkClickHandler}\r\n                            />\r\n                        </div>\r\n                    ),\r\n                    [fetchStatus, fetchError, resultLinkClickHandler]\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { Search };\r\n","import { useLocation } from 'react-router';\r\n\r\n/**\r\n * Получает массив значений параметров адресной строки по ключам\r\n *\r\n * @param {Array} keys Массив ключей\r\n *\r\n * @return {Array} Массив значений\r\n */\r\nexport function useSearchParams(keys) {\r\n    const searchParams = new URLSearchParams(useLocation().search);\r\n    return keys.map((key) => searchParams.get(key));\r\n}\r\n","import { Search } from '../search/Search';\r\n\r\nexport function MainPage() {\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"main-head\">\r\n                <h2>Главная Страница:</h2>\r\n            </div>\r\n            <Search />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport capitalize from 'lodash.capitalize';\r\n\r\nconst FavoritesColumn = (props) => {\r\n    const favoritesList = props.list.map((item) => (\r\n        <li key={`${props.type}/${item.itemId}`}>\r\n            <Link to={`/catalog/${props.type}/${item.itemId}`}>\r\n                {item.title}\r\n            </Link>\r\n        </li>\r\n    ));\r\n    return (\r\n        <div className=\"favorites-column\">\r\n            <h2>{capitalize(props.type)}:</h2>\r\n            <ul>{favoritesList}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { FavoritesColumn };\r\n","import { useSelector } from 'react-redux';\r\nimport { FavoritesColumn } from './FavoritesColumn';\r\n\r\nexport function Favorites() {\r\n    const { films, people, planets } = useSelector(\r\n        (state) => state.auth.favorites\r\n    );\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"favorites-container\">\r\n                <div className=\"main-head\">\r\n                    <h1>Избранное</h1>\r\n                </div>\r\n                <div className=\"favorites-body\">\r\n                    {films.length > 0 && (\r\n                        <FavoritesColumn\r\n                            key=\"films\"\r\n                            list={films}\r\n                            type=\"films\"\r\n                        />\r\n                    )}\r\n                    {people.length > 0 && (\r\n                        <FavoritesColumn\r\n                            key=\"people\"\r\n                            list={people}\r\n                            type=\"people\"\r\n                        />\r\n                    )}\r\n                    {planets.length > 0 && (\r\n                        <FavoritesColumn\r\n                            key=\"planets\"\r\n                            list={planets}\r\n                            type=\"planets\"\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport capitalize from 'lodash.capitalize';\r\n\r\nconst HistoryColumn = (props) => {\r\n    const type = props.type;\r\n    const historyList = props.list.map((historyItem) => {\r\n        const id = historyItem.id;\r\n        const url = `/catalog/${type}/${id}`;\r\n        const title = historyItem.title;\r\n        return (\r\n            <li key={url}>\r\n                <Link to={url}>{title}</Link>\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"history-column\">\r\n            <h2>{capitalize(type)}:</h2>\r\n            <ul>{historyList}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { HistoryColumn };\r\n","import { useSelector } from 'react-redux';\r\nimport { HistoryColumn } from './HistoryColumn';\r\n\r\nexport function History() {\r\n    const { films, people, planets } = useSelector(\r\n        (state) => state.auth.history\r\n    );\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"history-container\">\r\n                <div className=\"main-head\">\r\n                    <h1>История поиска</h1>\r\n                </div>\r\n                <div className=\"history-body\">\r\n                    {films.length > 0 && (\r\n                        <HistoryColumn key=\"films\" list={films} type=\"films\" />\r\n                    )}\r\n                    {people.length > 0 && (\r\n                        <HistoryColumn\r\n                            key=\"people\"\r\n                            list={people}\r\n                            type=\"people\"\r\n                        />\r\n                    )}\r\n                    {planets.length > 0 && (\r\n                        <HistoryColumn\r\n                            key=\"planets\"\r\n                            list={planets}\r\n                            type=\"planets\"\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport function NotFound() {\r\n    return (\r\n        <div className=\"body\">\r\n            <h1 style={{ color: 'red' }}>404 - Not Found!</h1>\r\n            <Link style={{ color: 'blue' }} to=\"/\">\r\n                <h3>Go Home</h3>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport function ProtectedRoute({ component: Component, ...rest }) {\r\n    const { userIsLogged } = useSelector((state) => state.auth.user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return userIsLogged ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/signin',\r\n                            state: {\r\n                                from: props.location,\r\n                            },\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        ></Route>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport function AuthRoute({ component: Component, ...rest }) {\r\n    const { userIsLogged } = useSelector((state) => state.auth.user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return !userIsLogged ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location,\r\n                            },\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        ></Route>\r\n    );\r\n}\r\n","export function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <span style={{ color: 'white' }}>Alexander Bosikov :</span>\r\n            <a\r\n                className=\"link\"\r\n                href=\"https://t.me/ArtificialMan\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                TELEGRAM\r\n            </a>\r\n            <a\r\n                className=\"link\"\r\n                href=\"https://github.com/ArtificialMan3000\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                GITHUB\r\n            </a>\r\n            <span style={{ margin: '5rem', color: 'white' }}>&&</span>\r\n            <span style={{ color: 'white' }}>Nikita Alekseev :</span>\r\n            <a\r\n                className=\"link\"\r\n                href=\"https://vk.com/parenizmetro\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                VK\r\n            </a>\r\n            <a\r\n                className=\"link\"\r\n                href=\"https://github.com/Nik-Ark\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                GITHUB\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n","import { Switch, Redirect, Route, useRouteMatch } from 'react-router-dom';\r\nimport { IsLoggedHead } from './features/header/IsLoggedHead';\r\nimport { NotLoggedHead } from './features/header/NotLoggedHead';\r\nimport { Signin } from './features/authorization/Signin';\r\nimport { Signup } from './features/authorization/Signup';\r\nimport { Category } from './features/catalog/category/Category';\r\nimport { SingleItem } from './features/catalog/item/SingleItem';\r\nimport { MainPage } from './features/mainPage/MainPage';\r\nimport { Favorites } from './features/favorites/Favorites';\r\nimport { History } from './features/history/History';\r\nimport { Search } from './features/search/Search';\r\nimport { NotFound } from './features/notFound/NotFound';\r\nimport { ProtectedRoute } from './auxiliary/routeWrappers/ProtectedRoute';\r\nimport { AuthRoute } from './auxiliary/routeWrappers/AuthRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { Footer } from './features/footer/Footer';\r\n\r\nexport function App() {\r\n    const { userIsLogged, userName } = useSelector((state) => state.auth.user);\r\n    let routeMatch = useRouteMatch();\r\n    console.log(routeMatch);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {userIsLogged ? (\r\n                <IsLoggedHead userName={userName} />\r\n            ) : (\r\n                <NotLoggedHead />\r\n            )}\r\n            <Switch>\r\n                <Route exact path=\"/\" component={MainPage} />\r\n                <AuthRoute exact path=\"/signin\" component={Signin} />\r\n                <AuthRoute exact path=\"/signup\" component={Signup} />\r\n                <ProtectedRoute\r\n                    exact\r\n                    path=\"/catalog/:type\"\r\n                    component={Category}\r\n                />\r\n                <ProtectedRoute\r\n                    exact\r\n                    path=\"/catalog/:type/:id\"\r\n                    component={SingleItem}\r\n                />\r\n                <ProtectedRoute exact path=\"/favorites\" component={Favorites} />\r\n                <ProtectedRoute exact path=\"/history\" component={History} />\r\n                <ProtectedRoute exact path=\"/search\" component={Search} />\r\n                <Route exact path=\"/404\" component={NotFound} />\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCatalogCategory, fetchCatalogItem } from './catalogFetchThunks';\r\nimport {\r\n    setPending,\r\n    setError,\r\n    addItemToCache,\r\n    addListItemsToCache,\r\n    resetStatus,\r\n} from './helpers';\r\n\r\nconst initialState = {\r\n    cache: { items: {}, listItems: {} },\r\n    status: 'idle',\r\n    error: null,\r\n};\r\n\r\nconst catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchCatalogCategory.pending, (state) => {\r\n                setPending(state);\r\n            })\r\n            .addCase(\r\n                fetchCatalogCategory.fulfilled,\r\n                (state, { payload: { type, result } }) => {\r\n                    resetStatus(state);\r\n                    addListItemsToCache(state, type, result);\r\n                }\r\n            )\r\n            .addCase(\r\n                fetchCatalogCategory.rejected,\r\n                (state, { payload: error }) => {\r\n                    setError(state, error);\r\n                }\r\n            )\r\n            .addCase(fetchCatalogItem.pending, (state) => {\r\n                setPending(state);\r\n            })\r\n            .addCase(\r\n                fetchCatalogItem.fulfilled,\r\n                (state, { payload: { type, result } }) => {\r\n                    resetStatus(state);\r\n                    addItemToCache(state, type, result);\r\n                }\r\n            )\r\n            .addCase(\r\n                fetchCatalogItem.rejected,\r\n                (state, { error: { message }, payload: error }) => {\r\n                    setError(state, `${message}: ${error}`);\r\n                }\r\n            );\r\n    },\r\n});\r\n\r\n// Получаем и экспортируем reducer и action creator\r\nconst catalogReducer = catalogSlice.reducer;\r\n\r\nexport { catalogReducer };\r\n","// Добавляет элемент в кеш\r\nconst addItemToCache = (state, type, item) => {\r\n    const cache = state.cache.items[type] || [];\r\n    cache.push(item);\r\n    // Кладём элемент в кеш\r\n    state.cache.items[type] = cache;\r\n};\r\n\r\n// Кладёт списочные элементы в кеш\r\nconst addListItemsToCache = (state, type, list) => {\r\n    // Сохраняем в кеш только нужные поля\r\n    const tightList = list.map(({ id, type, title }) => {\r\n        return { id, type, title };\r\n    });\r\n    state.cache.listItems[type] = tightList;\r\n};\r\n\r\nexport { addItemToCache, addListItemsToCache };\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { authReducer } from '../features/authorization/authSlice';\r\nimport { catalogReducer } from '../features/catalog/catalogSlice';\r\nimport { searchReducer } from '../features/search/searchSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        catalog: catalogReducer,\r\n        search: searchReducer,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { APP_CONFIG } from './app/config';\r\nimport { App } from './App';\r\nimport { store } from './app/store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router basename={APP_CONFIG.rootUrlPath}>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n","export const APP_CONFIG = {\r\n    rootUrlPath: '/andersen-project',\r\n};\r\n"],"sourceRoot":""}